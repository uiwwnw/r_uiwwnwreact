// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$band-name: 'band';
$band-x: 0px;
$band-y: 149px;
$band-offset-x: 0px;
$band-offset-y: -149px;
$band-width: 149px;
$band-height: 148px;
$band-total-width: 446px;
$band-total-height: 445px;
$band-image: './spritesmith-generated/sprite.png';
$band: (0px, 149px, 0px, -149px, 149px, 148px, 446px, 445px, './spritesmith-generated/sprite.png', 'band', );
$blog-name: 'blog';
$blog-x: 298px;
$blog-y: 149px;
$blog-offset-x: -298px;
$blog-offset-y: -149px;
$blog-width: 148px;
$blog-height: 148px;
$blog-total-width: 446px;
$blog-total-height: 445px;
$blog-image: './spritesmith-generated/sprite.png';
$blog: (298px, 149px, -298px, -149px, 148px, 148px, 446px, 445px, './spritesmith-generated/sprite.png', 'blog', );
$daum-name: 'daum';
$daum-x: 149px;
$daum-y: 149px;
$daum-offset-x: -149px;
$daum-offset-y: -149px;
$daum-width: 149px;
$daum-height: 148px;
$daum-total-width: 446px;
$daum-total-height: 445px;
$daum-image: './spritesmith-generated/sprite.png';
$daum: (149px, 149px, -149px, -149px, 149px, 148px, 446px, 445px, './spritesmith-generated/sprite.png', 'daum', );
$facebook-name: 'facebook';
$facebook-x: 298px;
$facebook-y: 0px;
$facebook-offset-x: -298px;
$facebook-offset-y: 0px;
$facebook-width: 148px;
$facebook-height: 149px;
$facebook-total-width: 446px;
$facebook-total-height: 445px;
$facebook-image: './spritesmith-generated/sprite.png';
$facebook: (298px, 0px, -298px, 0px, 148px, 149px, 446px, 445px, './spritesmith-generated/sprite.png', 'facebook', );
$kakao-name: 'kakao';
$kakao-x: 0px;
$kakao-y: 297px;
$kakao-offset-x: 0px;
$kakao-offset-y: -297px;
$kakao-width: 149px;
$kakao-height: 148px;
$kakao-total-width: 446px;
$kakao-total-height: 445px;
$kakao-image: './spritesmith-generated/sprite.png';
$kakao: (0px, 297px, 0px, -297px, 149px, 148px, 446px, 445px, './spritesmith-generated/sprite.png', 'kakao', );
$line-name: 'line';
$line-x: 149px;
$line-y: 297px;
$line-offset-x: -149px;
$line-offset-y: -297px;
$line-width: 148px;
$line-height: 148px;
$line-total-width: 446px;
$line-total-height: 445px;
$line-image: './spritesmith-generated/sprite.png';
$line: (149px, 297px, -149px, -297px, 148px, 148px, 446px, 445px, './spritesmith-generated/sprite.png', 'line', );
$mail-name: 'mail';
$mail-x: 0px;
$mail-y: 0px;
$mail-offset-x: 0px;
$mail-offset-y: 0px;
$mail-width: 149px;
$mail-height: 149px;
$mail-total-width: 446px;
$mail-total-height: 445px;
$mail-image: './spritesmith-generated/sprite.png';
$mail: (0px, 0px, 0px, 0px, 149px, 149px, 446px, 445px, './spritesmith-generated/sprite.png', 'mail', );
$twitter-name: 'twitter';
$twitter-x: 149px;
$twitter-y: 0px;
$twitter-offset-x: -149px;
$twitter-offset-y: 0px;
$twitter-width: 149px;
$twitter-height: 149px;
$twitter-total-width: 446px;
$twitter-total-height: 445px;
$twitter-image: './spritesmith-generated/sprite.png';
$twitter: (149px, 0px, -149px, 0px, 149px, 149px, 446px, 445px, './spritesmith-generated/sprite.png', 'twitter', );
$spritesheet-width: 446px;
$spritesheet-height: 445px;
$spritesheet-image: './spritesmith-generated/sprite.png';
$spritesheet-sprites: ($band, $blog, $daum, $facebook, $kakao, $line, $mail, $twitter, );
$spritesheet: (446px, 445px, './spritesmith-generated/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
